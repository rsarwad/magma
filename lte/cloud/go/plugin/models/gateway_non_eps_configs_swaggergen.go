// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GatewayNonEpsConfigs Non-EPS service configuration for a gateway
// swagger:model gateway_non_eps_configs
type GatewayNonEpsConfigs struct {

	// arfcn 2g
	// Required: true
	Arfcn2g []uint32 `json:"arfcn_2g"`

	// csfb mcc
	// Required: true
	// Min Length: 1
	// Pattern: ^(\d{3})$
	CsfbMcc string `json:"csfb_mcc"`

	// csfb mnc
	// Required: true
	// Min Length: 1
	// Pattern: ^(\d{2,3})$
	CsfbMnc string `json:"csfb_mnc"`

	// csfb rat
	// Required: true
	// Enum: [0 1]
	CsfbRat *uint32 `json:"csfb_rat"`

	// lac
	// Required: true
	Lac *uint32 `json:"lac"`

	// non eps service control
	// Required: true
	// Enum: [0 1 2]
	NonEpsServiceControl *uint32 `json:"non_eps_service_control"`
}

// Validate validates this gateway non eps configs
func (m *GatewayNonEpsConfigs) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateArfcn2g(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCsfbMcc(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCsfbMnc(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCsfbRat(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLac(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNonEpsServiceControl(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GatewayNonEpsConfigs) validateArfcn2g(formats strfmt.Registry) error {

	if err := validate.Required("arfcn_2g", "body", m.Arfcn2g); err != nil {
		return err
	}

	return nil
}

func (m *GatewayNonEpsConfigs) validateCsfbMcc(formats strfmt.Registry) error {

	if err := validate.RequiredString("csfb_mcc", "body", string(m.CsfbMcc)); err != nil {
		return err
	}

	if err := validate.MinLength("csfb_mcc", "body", string(m.CsfbMcc), 1); err != nil {
		return err
	}

	if err := validate.Pattern("csfb_mcc", "body", string(m.CsfbMcc), `^(\d{3})$`); err != nil {
		return err
	}

	return nil
}

func (m *GatewayNonEpsConfigs) validateCsfbMnc(formats strfmt.Registry) error {

	if err := validate.RequiredString("csfb_mnc", "body", string(m.CsfbMnc)); err != nil {
		return err
	}

	if err := validate.MinLength("csfb_mnc", "body", string(m.CsfbMnc), 1); err != nil {
		return err
	}

	if err := validate.Pattern("csfb_mnc", "body", string(m.CsfbMnc), `^(\d{2,3})$`); err != nil {
		return err
	}

	return nil
}

var gatewayNonEpsConfigsTypeCsfbRatPropEnum []interface{}

func init() {
	var res []uint32
	if err := json.Unmarshal([]byte(`[0,1]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gatewayNonEpsConfigsTypeCsfbRatPropEnum = append(gatewayNonEpsConfigsTypeCsfbRatPropEnum, v)
	}
}

// prop value enum
func (m *GatewayNonEpsConfigs) validateCsfbRatEnum(path, location string, value uint32) error {
	if err := validate.Enum(path, location, value, gatewayNonEpsConfigsTypeCsfbRatPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GatewayNonEpsConfigs) validateCsfbRat(formats strfmt.Registry) error {

	if err := validate.Required("csfb_rat", "body", m.CsfbRat); err != nil {
		return err
	}

	// value enum
	if err := m.validateCsfbRatEnum("csfb_rat", "body", *m.CsfbRat); err != nil {
		return err
	}

	return nil
}

func (m *GatewayNonEpsConfigs) validateLac(formats strfmt.Registry) error {

	if err := validate.Required("lac", "body", m.Lac); err != nil {
		return err
	}

	return nil
}

var gatewayNonEpsConfigsTypeNonEpsServiceControlPropEnum []interface{}

func init() {
	var res []uint32
	if err := json.Unmarshal([]byte(`[0,1,2]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gatewayNonEpsConfigsTypeNonEpsServiceControlPropEnum = append(gatewayNonEpsConfigsTypeNonEpsServiceControlPropEnum, v)
	}
}

// prop value enum
func (m *GatewayNonEpsConfigs) validateNonEpsServiceControlEnum(path, location string, value uint32) error {
	if err := validate.Enum(path, location, value, gatewayNonEpsConfigsTypeNonEpsServiceControlPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GatewayNonEpsConfigs) validateNonEpsServiceControl(formats strfmt.Registry) error {

	if err := validate.Required("non_eps_service_control", "body", m.NonEpsServiceControl); err != nil {
		return err
	}

	// value enum
	if err := m.validateNonEpsServiceControlEnum("non_eps_service_control", "body", *m.NonEpsServiceControl); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GatewayNonEpsConfigs) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GatewayNonEpsConfigs) UnmarshalBinary(b []byte) error {
	var res GatewayNonEpsConfigs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
