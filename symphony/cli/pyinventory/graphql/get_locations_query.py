#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql.gql.datetime_utils import DATETIME_FIELD
from gql.gql.graphql_client import GraphqlClient
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import DataClassJsonMixin


@dataclass
class GetLocationsQuery(DataClassJsonMixin):
    @dataclass
    class GetLocationsQueryData(DataClassJsonMixin):
        @dataclass
        class LocationConnection(DataClassJsonMixin):
            @dataclass
            class LocationEdge(DataClassJsonMixin):
                @dataclass
                class Location(DataClassJsonMixin):
                    @dataclass
                    class LocationType(DataClassJsonMixin):
                        name: str

                    id: str
                    name: str
                    latitude: Number
                    longitude: Number
                    locationType: LocationType
                    externalId: Optional[str] = None

                node: Optional[Location] = None

            edges: List[LocationEdge]

        locations: Optional[LocationConnection] = None

    data: GetLocationsQueryData

    __QUERY__: str = """
    query GetLocationsQuery {
  locations {
    edges {
      node {
        id
        name
        latitude
        longitude
        externalId
        locationType {
          name
        }
      }
    }
  }
}

    """

    @classmethod
    # fmt: off
    def execute(cls, client: GraphqlClient) -> GetLocationsQueryData:
        # fmt: off
        variables = {}
        response_text = client.call(cls.__QUERY__, variables=variables)
        return cls.from_json(response_text).data
