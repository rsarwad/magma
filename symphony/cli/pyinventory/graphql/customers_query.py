#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql.gql.datetime_utils import DATETIME_FIELD
from gql.gql.graphql_client import GraphqlClient
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import DataClassJsonMixin


@dataclass
class CustomersQuery(DataClassJsonMixin):
    @dataclass
    class CustomersQueryData(DataClassJsonMixin):
        @dataclass
        class CustomerConnection(DataClassJsonMixin):
            @dataclass
            class CustomerEdge(DataClassJsonMixin):
                @dataclass
                class Customer(DataClassJsonMixin):
                    id: str
                    name: str
                    externalId: Optional[str] = None

                node: Optional[Customer] = None

            edges: List[CustomerEdge]

        customers: Optional[CustomerConnection] = None

    data: CustomersQueryData

    __QUERY__: str = """
    query CustomersQuery {
  customers {
    edges {
      node {
        id
        name
        externalId
      }
    }
  }
}

    """

    @classmethod
    # fmt: off
    def execute(cls, client: GraphqlClient) -> CustomersQueryData:
        # fmt: off
        variables = {}
        response_text = client.call(cls.__QUERY__, variables=variables)
        return cls.from_json(response_text).data
