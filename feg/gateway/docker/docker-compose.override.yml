version: "3.7"

services:
  test:
    container_name: test
    image: feg_gateway_go_base
    build:
      target: base
      context: ${BUILD_CONTEXT}
      dockerfile: feg/gateway/docker/go/Dockerfile
    volumes:
      - ../../../:/magma
      - ../configs:/etc/magma
      - gwcerts:/var/opt/magma/certs
      - gwconfigs:/var/opt/magma/configs
    networks:
      - magma
    command: 
      - /bin/bash
      - -c
      - |
         mkdir -p ../../.cache/feg/
         touch ../../.cache/feg/snowflake
         tail -f /dev/null

  hss:
    container_name: hss
    image: feg_gateway_go
    volumes:
      - ../configs:/etc/magma
      - gwcerts:/var/opt/magma/certs
      - gwconfigs:/var/opt/magma/configs
    restart: always
    networks:
      - magma
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/hss -logtostderr=true -v=0

  control_proxy:
    depends_on:
      - test
    command:
      - /bin/bash
      - -c
      - |
         ip -4 route list match 0/0 | awk '{print $$3 " controller.magma.test"}' >> /etc/hosts
         ip -4 route list match 0/0 | awk '{print $$3 " bootstrapper-controller.magma.test"}' >> /etc/hosts
         /usr/local/bin/generate_nghttpx_config.py
         /usr/bin/env nghttpx --conf /var/opt/magma/tmp/nghttpx.conf /var/opt/magma/certs/controller.key /var/opt/magma/certs/controller.crt

  csfb:
    build:
      context: ${BUILD_CONTEXT}
      dockerfile: feg/gateway/docker/go/Dockerfile

  magmad:
    depends_on:
      - test
    build:
      context: ${BUILD_CONTEXT}
      dockerfile: feg/gateway/docker/python/Dockerfile
    command:
      - /bin/bash
      - -c
      - |
         ip -4 route list match 0/0 | awk '{print $$3 " controller.magma.test"}' >> /etc/hosts
         ip -4 route list match 0/0 | awk '{print $$3 " bootstrapper-controller.magma.test"}' >> /etc/hosts
         python3.5 -m magma.magmad.main

  radius:
    build:
      context: ${BUILD_CONTEXT}
      dockerfile: feg/gateway/docker/radius/Dockerfile

volumes:
  gwcerts:
  gwconfigs:
