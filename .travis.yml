# Copyright (c) Facebook, Inc. and its affiliates.
# All rights reserved.

# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.
matrix:
  include:
    - language: go
      name: Verifying generated files are in-sync
      go:
        - 1.11.x
      os: linux
      dist: xenial

      env:
        - MAGMA_ROOT=$TRAVIS_BUILD_DIR GO111MODULE=on

      before_install:
        - ./travis/golang_before_install.sh

      before_script:
        - sudo mkdir -p /etc/magma/configs
        - ./travis/link_cloud_configs.sh

      script:
        - travis_retry travis_retry travis_wait make -C ${MAGMA_ROOT}/orc8r/cloud download
        - cd ${MAGMA_ROOT}/feg/gateway
        - travis_retry travis_wait go mod download

        # Clear temp files (e.g. travis_retry/travis_wait logs)
        - cd ${MAGMA_ROOT}
        - git clean -fd

        - make -C ${MAGMA_ROOT}/orc8r/cloud gen
        - make -C ${MAGMA_ROOT}/feg/gateway gen
        - cd ${MAGMA_ROOT}
        - git add .
        - git status
        # This command will exit 1 if there are any changes to the git clone
        - git diff-index --quiet HEAD

    - language: go
      name: Cloud precommit
      go:
        - 1.11.x
      os: linux
      dist: xenial

      env:
        - MAGMA_ROOT=$TRAVIS_BUILD_DIR GO111MODULE=on

      before_install:
        - ./travis/golang_before_install.sh
        - ./travis/start_dynamo_local.sh

      before_script:
        - sudo mkdir -p /etc/magma/configs
        - ./travis/link_cloud_configs.sh

      script:
        - travis_retry travis_retry travis_wait make -C ${MAGMA_ROOT}/orc8r/cloud download
        - make -C ${MAGMA_ROOT}/orc8r/cloud tools
        - make -C ${MAGMA_ROOT}/orc8r/cloud precommit

    - language: go
      name: FeG precommit
      go:
        - 1.11.x
      os: linux
      dist: xenial

      env:
        - MAGMA_ROOT=$TRAVIS_BUILD_DIR GO111MODULE=on

      before_install:
        - ./travis/golang_before_install.sh

      before_script:
        - sudo ln -s $MAGMA_ROOT/config/feg /etc/magma

      script:
        - cd ${MAGMA_ROOT}/feg/gateway
        - travis_retry travis_wait go mod download
        - make -C ${MAGMA_ROOT}/feg/gateway precommit

    - language: go
      name: orc8r gateway go tests
      go:
        - 1.12.x
      os: linux
      dist: xenial

      env:
        - MAGMA_ROOT=$TRAVIS_BUILD_DIR GO111MODULE=on GOPROXY=https://proxy.golang.org

      script:
        - cd ${MAGMA_ROOT}/orc8r/gateway/go
        - travis_retry travis_wait go mod download
        - go test ./...
        - go vet ./...

    - language: minimal
      name: LTE gateway python unit tests
      os: linux
      dist: xenial

      env:
        - MAGMA_ROOT=$TRAVIS_BUILD_DIR PYTHON_BUILD=$TRAVIS_BUILD_DIR/build PIP_CACHE_HOME=$TRAVIS_BUILD_DIR/.pipcache MAGMA_DEV_MODE=1 SKIP_SUDO_TESTS=1

      before_install:
        - sudo apt-get update -qq
        - sudo apt-get install -y libsystemd-dev pkg-config
        - sudo apt-get install -y virtualenv python-babel python-dev build-essential python3-setuptools python-setuptools autogen autoconf libtool python3-apt python3-aioeventlet python3-requests python3-pip python-protobuf

        # Install protobuf compiler
        - sudo curl -Lfs https://github.com/google/protobuf/releases/download/v3.1.0/protoc-3.1.0-linux-x86_64.zip -o protoc3.zip
        - sudo unzip protoc3.zip -d protoc3
        - sudo mv protoc3/bin/protoc /bin/protoc
        - sudo chmod a+rx /bin/protoc
        - sudo mv protoc3/include/google /usr/include/
        - sudo chmod -R a+Xr /usr/include/google
        - sudo rm -rf protoc3.zip protoc3

      script:
        - make -C $MAGMA_ROOT/lte/gateway/python test_all

    - language: minimal
      name: nms builds
      os: linux
      dist: xenial

      env:
        - NMS_ROOT=$TRAVIS_BUILD_DIR/nms

      addons:
        apt:
          packages:
            - docker-ce

      script:
        - cd ${NMS_ROOT}
        - docker build -t magmalte -f fbcnms-projects/magmalte/Dockerfile .

notifications:
  slack:
    rooms:
      - secure: "IKyVU47tsxlYOql5QOr2rBOrKRpdTy0dOgzzc5YYEKgYu+w4uvSrq2tmAYSjVqcQmfs3etinNQJz7sZZ38bgUmL/hm+c8dY6Lfyc8xJX6XUcnWzPvRhZXvNL0m5xdTmHMQCzlWrq6wSwY2ncmS2AYyYWGMHDG4v+I2Vrg9wiJJhkSY0L7rQnUbTpx/UM7SInMCV6S1yiNchKJEsgxSLZknSMf93vTiCKgK0WJRvpSXuhUJma8vgb2qYW79MgWHfqaSEy08kilNXCHowHHmvfgBub3n5rfrWgKVXvIKCE/LtmgvrYXb/zEKVpBRSDKMbNNlYlsmare8OO55rdX2jntIHEVfMQ9X8PaeK7G1faKBeYBamZOMeZK6rgo1DTJ2cobiGRA2nDgXLAofLF4QhF4MloJUFGmX03QDgOXjdijDtYFrgjFuy+vzTRL++m+4HS4Fe7uMMr4mjYw4CkkNEgc9K9j9DZKtPqsMS+c09KyDC7nfalvImduL/2SVjb0lI9U9DFCIQ+LhMVTrKuhMNUGQgoWqhsVMPvzLfoDvOJjp40AqAmHBHZOUQxbbjmnU7sHyCptSS1GkqnR3EON3BX9rhYhMrPBAqUsMugorokgA04yttvLcuPldXcKVwdlqn7NxrDBKz4Ul1EPSuxazm3YTuIrKTfi8r91gXhniMY6sw="
    on_success: change
    on_failure: always
    on_pull_requests: false

