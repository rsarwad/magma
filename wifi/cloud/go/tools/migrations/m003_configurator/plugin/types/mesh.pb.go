// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mesh.proto

package types

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MeshNode struct {
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MeshNode) Reset()         { *m = MeshNode{} }
func (m *MeshNode) String() string { return proto.CompactTextString(m) }
func (*MeshNode) ProtoMessage()    {}
func (*MeshNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_mesh_a706488bb4927de4, []int{0}
}
func (m *MeshNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeshNode.Unmarshal(m, b)
}
func (m *MeshNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeshNode.Marshal(b, m, deterministic)
}
func (dst *MeshNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeshNode.Merge(dst, src)
}
func (m *MeshNode) XXX_Size() int {
	return xxx_messageInfo_MeshNode.Size(m)
}
func (m *MeshNode) XXX_DiscardUnknown() {
	xxx_messageInfo_MeshNode.DiscardUnknown(m)
}

var xxx_messageInfo_MeshNode proto.InternalMessageInfo

func (m *MeshNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LegacyMeshConfig struct {
	Ssid                 string            `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Password             string            `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	VlSsid               string            `protobuf:"bytes,3,opt,name=vl_ssid,json=vlSsid,proto3" json:"vl_ssid,omitempty"`
	XwfEnabled           bool              `protobuf:"varint,7,opt,name=xwf_enabled,json=xwfEnabled,proto3" json:"xwf_enabled,omitempty"`
	MeshSsid             string            `protobuf:"bytes,10,opt,name=mesh_ssid,json=meshSsid,proto3" json:"mesh_ssid,omitempty"`
	MeshFrequency        int32             `protobuf:"varint,11,opt,name=mesh_frequency,json=meshFrequency,proto3" json:"mesh_frequency,omitempty"`
	MeshChannelType      string            `protobuf:"bytes,12,opt,name=mesh_channel_type,json=meshChannelType,proto3" json:"mesh_channel_type,omitempty"`
	AdditionalProps      map[string]string `protobuf:"bytes,13,rep,name=additional_props,json=additionalProps,proto3" json:"additional_props,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LegacyMeshConfig) Reset()         { *m = LegacyMeshConfig{} }
func (m *LegacyMeshConfig) String() string { return proto.CompactTextString(m) }
func (*LegacyMeshConfig) ProtoMessage()    {}
func (*LegacyMeshConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_mesh_a706488bb4927de4, []int{1}
}
func (m *LegacyMeshConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LegacyMeshConfig.Unmarshal(m, b)
}
func (m *LegacyMeshConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LegacyMeshConfig.Marshal(b, m, deterministic)
}
func (dst *LegacyMeshConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LegacyMeshConfig.Merge(dst, src)
}
func (m *LegacyMeshConfig) XXX_Size() int {
	return xxx_messageInfo_LegacyMeshConfig.Size(m)
}
func (m *LegacyMeshConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LegacyMeshConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LegacyMeshConfig proto.InternalMessageInfo

func (m *LegacyMeshConfig) GetSsid() string {
	if m != nil {
		return m.Ssid
	}
	return ""
}

func (m *LegacyMeshConfig) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LegacyMeshConfig) GetVlSsid() string {
	if m != nil {
		return m.VlSsid
	}
	return ""
}

func (m *LegacyMeshConfig) GetXwfEnabled() bool {
	if m != nil {
		return m.XwfEnabled
	}
	return false
}

func (m *LegacyMeshConfig) GetMeshSsid() string {
	if m != nil {
		return m.MeshSsid
	}
	return ""
}

func (m *LegacyMeshConfig) GetMeshFrequency() int32 {
	if m != nil {
		return m.MeshFrequency
	}
	return 0
}

func (m *LegacyMeshConfig) GetMeshChannelType() string {
	if m != nil {
		return m.MeshChannelType
	}
	return ""
}

func (m *LegacyMeshConfig) GetAdditionalProps() map[string]string {
	if m != nil {
		return m.AdditionalProps
	}
	return nil
}

func init() {
	proto.RegisterType((*MeshNode)(nil), "magma.migration.wifi.MeshNode")
	proto.RegisterType((*LegacyMeshConfig)(nil), "magma.migration.wifi.LegacyMeshConfig")
	proto.RegisterMapType((map[string]string)(nil), "magma.migration.wifi.LegacyMeshConfig.AdditionalPropsEntry")
}

func init() { proto.RegisterFile("mesh.proto", fileDescriptor_mesh_a706488bb4927de4) }

var fileDescriptor_mesh_a706488bb4927de4 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x49, 0x63, 0xff, 0x4d, 0xad, 0xad, 0x4b, 0xc1, 0x50, 0x41, 0x43, 0x41, 0x08, 0x1e,
	0x72, 0xd0, 0x8b, 0xe8, 0xc9, 0x96, 0x7a, 0x52, 0x91, 0xe8, 0xc9, 0x4b, 0xd8, 0x36, 0x93, 0x74,
	0x31, 0xd9, 0x8d, 0xd9, 0x34, 0x69, 0xbe, 0x89, 0x1f, 0x57, 0x76, 0xd3, 0x16, 0x94, 0xde, 0x66,
	0xde, 0xbc, 0xdf, 0xc0, 0xbc, 0x01, 0x48, 0x50, 0xae, 0xdc, 0x34, 0x13, 0xb9, 0x20, 0xa3, 0x84,
	0x46, 0x09, 0x75, 0x13, 0x16, 0x65, 0x34, 0x67, 0x82, 0xbb, 0x25, 0x0b, 0xd9, 0xe4, 0x02, 0x3a,
	0x2f, 0x28, 0x57, 0xaf, 0x22, 0x40, 0x42, 0xe0, 0x88, 0xd3, 0x04, 0xad, 0x86, 0x6d, 0x38, 0x5d,
	0x4f, 0xd7, 0x93, 0x1f, 0x13, 0x86, 0xcf, 0x18, 0xd1, 0x65, 0xa5, 0x6c, 0x33, 0xc1, 0x43, 0x16,
	0x29, 0xa3, 0x94, 0x2c, 0xb0, 0x8c, 0xda, 0xa8, 0x6a, 0x32, 0x86, 0x4e, 0x4a, 0xa5, 0x2c, 0x45,
	0x16, 0x6c, 0x17, 0xec, 0x7b, 0x72, 0x06, 0xed, 0x22, 0xf6, 0x35, 0x62, 0xea, 0x51, 0xab, 0x88,
	0xdf, 0x15, 0x74, 0x09, 0xbd, 0x4d, 0x19, 0xfa, 0xc8, 0xe9, 0x22, 0xc6, 0xc0, 0x6a, 0xdb, 0x86,
	0xd3, 0xf1, 0x60, 0x53, 0x86, 0xf3, 0x5a, 0x21, 0xe7, 0xd0, 0x55, 0x27, 0xd4, 0x2c, 0xd4, 0x6b,
	0x95, 0xa0, 0xe9, 0x2b, 0x38, 0xd1, 0xc3, 0x30, 0xc3, 0xef, 0x35, 0xf2, 0x65, 0x65, 0xf5, 0x6c,
	0xc3, 0x69, 0x7a, 0x7d, 0xa5, 0x3e, 0xed, 0x44, 0x72, 0x0d, 0xa7, 0xda, 0xb6, 0x5c, 0x51, 0xce,
	0x31, 0xf6, 0xf3, 0x2a, 0x45, 0xeb, 0x58, 0xef, 0x1a, 0xa8, 0xc1, 0xac, 0xd6, 0x3f, 0xaa, 0x14,
	0x49, 0x08, 0x43, 0x1a, 0x04, 0x4c, 0xe5, 0x43, 0x63, 0x3f, 0xcd, 0x44, 0x2a, 0xad, 0xbe, 0x6d,
	0x3a, 0xbd, 0x9b, 0x07, 0xf7, 0x50, 0x7e, 0xee, 0xff, 0x6c, 0xdc, 0xc7, 0x3d, 0xfe, 0xa6, 0xe8,
	0x39, 0xcf, 0xb3, 0xca, 0x1b, 0xd0, 0xbf, 0xea, 0x78, 0x0a, 0xa3, 0x43, 0x46, 0x32, 0x04, 0xf3,
	0x0b, 0xab, 0x6d, 0xb0, 0xaa, 0x24, 0x23, 0x68, 0x16, 0x34, 0x5e, 0xef, 0xbe, 0x52, 0x37, 0xf7,
	0x8d, 0x3b, 0x63, 0xda, 0xfe, 0x6c, 0xaa, 0x53, 0xe4, 0xa2, 0xa5, 0x1f, 0x7c, 0xfb, 0x1b, 0x00,
	0x00, 0xff, 0xff, 0xbc, 0x37, 0x5e, 0xef, 0xee, 0x01, 0x00, 0x00,
}
