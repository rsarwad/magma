/*
 * Copyright 2020 The Magma Authors.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// MeshConfigs Wifi configurations for a mesh network
// swagger:model mesh_configs
type MeshConfigs struct {

	// additional props
	AdditionalProps map[string]string `json:"additional_props,omitempty"`

	// mesh channel type
	MeshChannelType string `json:"mesh_channel_type,omitempty"`

	// mesh frequency
	MeshFrequency int32 `json:"mesh_frequency,omitempty"`

	// mesh ssid
	MeshSsid string `json:"mesh_ssid,omitempty"`

	// password
	Password string `json:"password,omitempty"`

	// ssid
	Ssid string `json:"ssid,omitempty"`

	// vl ssid
	VlSsid string `json:"vl_ssid,omitempty"`

	// xwf enabled
	XwfEnabled bool `json:"xwf_enabled,omitempty"`
}

// Validate validates this mesh configs
func (m *MeshConfigs) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MeshConfigs) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MeshConfigs) UnmarshalBinary(b []byte) error {
	var res MeshConfigs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
