{{/*
Copyright (c) 2018-present, Facebook, Inc.
All rights reserved.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree. An additional grant
of patent rights can be found in the PATENTS file in the same directory.
*/}}
{{- if .Values.metrics.create }}
{{- $serviceName := print .Release.Name "-metrics" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceName }}
  labels:
    app.kubernetes.io/component: metrics
{{ include "metrics.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.metrics.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: metrics
{{ include "selector-labels" . | indent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: metrics
{{ include "selector-labels" . | indent 8 }}
    spec:
      {{- with .Values.metrics.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.metrics.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.metrics.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | trimSuffix "\n" | indent 8 }}
      {{- end }}

      volumes:
        - name: "prometheus-config"
{{ toYaml .Values.metrics.volumes.prometheusConfig.volumeSpec | indent 10 }}
        - name: "prometheus-data"
{{ toYaml .Values.metrics.volumes.prometheusData.volumeSpec | indent 10 }}

  {{ if .Values.metrics.useMinikube }}
      initContainers:
        - name: volume-mount
          image: busybox
          command: ["sh", "-c", "chmod -R 777 /prometheusData /etc/configs"]
          volumeMounts:
          - name: prometheus-data
            mountPath: /prometheusData
          - name: prometheus-config
            mountPath: /etc/configs
  {{ end }}

      containers:
        - name: "prometheus"
          image: {{ required "metrics.prometheusImage.repository must be provided" .Values.metrics.prometheusImage.repository }}:{{ .Values.metrics.prometheusImage.tag }}
          imagePullPolicy: {{ .Values.metrics.prometheusImage.pullPolicy }}
          volumeMounts:
            - name: "prometheus-config"
              mountPath: /etc/prometheus
              readOnly: true
            - name: "prometheus-data"
              mountPath: /data
          ports:
            - containerPort: 9090
          args: ['--config.file=/etc/prometheus/prometheus.yml',
                 '--storage.tsdb.retention.time={{ .Values.metrics.retention.time }}',
                 '--storage.tsdb.path=/data',
                 '--web.enable-lifecycle']
          livenessProbe:
            httpGet:
              path: /graph
              port: 9090
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
{{ toYaml .Values.metrics.prometheusResources | indent 12 }}

        - name: "alertmanager"
          image: {{ required "metrics.alertmanagerImage.repository must be provided" .Values.metrics.alertmanagerImage.repository }}:{{ .Values.metrics.alertmanagerImage.tag }}
          imagePullPolicy: {{ .Values.metrics.alertmanagerImage.pullPolicy }}
          volumeMounts:
            - name: "prometheus-config"
              mountPath: /etc/alertmanager
              readOnly: true
          ports:
            - containerPort: 9093
          livenessProbe:
            httpGet:
              path: /
              port: 9093
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
{{ toYaml .Values.metrics.alertmanagerResources | indent 12 }}

        - name: "config-manager"
          image: {{ required "metrics.configImage.repository must be provided" .Values.metrics.configImage.repository }}:{{ .Values.metrics.configImage.tag }}
          imagePullPolicy: {{ .Values.metrics.configImage.pullPolicy }}
          ports:
            - containerPort: 9100
            - containerPort: 9101
          volumeMounts:
            - name: "prometheus-config"
              mountPath: /etc/configs
          env:
            - name: PROM_ALERTCONFIG_PORT
              value: {{ .Values.metrics.environment.promAlertconfigPort | quote }}
            - name: RULES_DIR
              value: {{ .Values.metrics.environment.rulesDir | quote }}
            - name: PROMETHEUS_URL
              value: {{ .Values.metrics.environment.prometheusURL | quote }}
            - name: ALERTMANAGER_CONFIG_PORT
              value: {{ .Values.metrics.environment.alertmanagerConfigPort | quote }}
            - name: ALERTMANAGER_CONF_PATH
              value: {{ .Values.metrics.environment.alertmanagerConfPath | quote }}
            - name: ALERTMANAGER_URL
              value: {{ .Values.metrics.environment.alertmanagerURL | quote }}
          resources:
{{ toYaml .Values.metrics.configResources | indent 12 }}
{{- end }}
