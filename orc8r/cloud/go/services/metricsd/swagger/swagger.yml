---
swagger: '2.0'
info:
  title: Metricsd Model Definitions and Paths
  description: Magma REST APIs
  version: 1.0.0

tags:
- name: Metrics
  description: Viewing collected gateway metrics

paths:
  /networks/{network_id}/prometheus/query:
    get:
      summary: Retrieve the datapoints from a Prometheus Query
      tags:
      - Metrics
      parameters:
      - $ref: './swagger-common.yml#/parameters/network_id'
      - in: query
        name: query
        type: string
        description: PromQL query to proxy to prometheus
        required: true
      - in: query
        name: time
        type: string
        description: time for query (UnixTime or RFC3339)
        required: false
      responses:
        '200':
          description:
            List of PromQL metrics results
          schema:
            type: array
            items:
              $ref: '#/definitions/promql_return_object'
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'
  /networks/{network_id}/prometheus/query_range:
    get:
      summary: Retrieve the datapoints from a Prometheus Query over a specified time range
      tags:
      - Metrics
      parameters:
      - $ref: './swagger-common.yml#/parameters/network_id'
      - in: query
        name: query
        type: string
        description: PromQL query to proxy to prometheus
        required: true
      - in: query
        name: start
        type: string
        description: start time of the requested range (UnixTime or RFC3339)
        required: true
      - in: query
        name: end
        type: string
        description: end time of the requested range (UnixTime or RFC3339)
        required: false
      - in: query
        name: step
        type: string
        description: query range resolution step width
        required: false
      responses:
        '200':
          description: List of PromQL metrics results
          schema:
            type: array
            items:
              $ref: '#/definitions/promql_return_object'
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'
  /networks/{network_id}/alerts:
    get:
      summary: View currently firing alerts
      tags:
        - Metrics
      parameters:
        - $ref: './swagger-common.yml#/parameters/network_id'
      responses:
        '200':
          description: List of currently firing alerts
          schema:
            type: array
            items:
              $ref: '#/definitions/prom_firing_alert'
        'default':
          $ref: './swagger-common.yml#/responses/UnexpectedError'

  /networks/{network_id}/prometheus/alert_config:
    post:
      summary: Create new alerting rule
      tags:
        - Metrics
      parameters:
        - $ref: './swagger-common.yml#/parameters/network_id'
        - in: body
          name: alert_config
          description: Alerting rule that is to be added
          required: true
          schema:
            $ref: '#/definitions/prom_alert_config'

      responses:
        '201':
          description: Created
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'
    get:
      summary: Retrive alerting rule configurations
      description: If no query parameters are included, all alerting rules for the given network are returned.
      tags:
        - Metrics
      parameters:
        - $ref: './swagger-common.yml#/parameters/network_id'
        - in: query
          name: alert_name
          description: Name of alert to be retrieved
          required: false
          type: string
      responses:
        '200':
          description: List of alert configurations
          schema:
            $ref: '#/definitions/prom_alert_config_list'
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'
    delete:
      summary: Delete an alerting rule
      tags:
        - Metrics
      parameters:
        - $ref: './swagger-common.yml#/parameters/network_id'
        - in: query
          name: alert_name
          description: Name of alert to be deleted
          required: true
          type: string
      responses:
        '200':
          description: Deleted
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'

  /networks/{network_id}/prometheus/alert_config/bulk:
    put:
      summary: Bulk update/create alerting rules
      tags:
        - Metrics
      parameters:
        - $ref: './swagger-common.yml#/parameters/network_id'
        - in: body
          name: alert_configs
          description: Alerting rules to be updated or created
          required: true
          schema:
            $ref: '#/definitions/prom_alert_config_list'

      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/alert_bulk_upload_response'
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'

  /networks/{network_id}/prometheus/alert_config/{alert_name}:
    put:
      summary: Update an alerting rule
      tags:
        - Metrics
      parameters:
        - $ref: './swagger-common.yml#/parameters/network_id'
        - in: path
          name: alert_name
          description: Name of alert to be updated
          required: true
          type: string
        - in: body
          name: alert_config
          description: Alerting rule that is to be added
          required: true
          schema:
            $ref: '#/definitions/prom_alert_config'
      responses:
        '200':
          description: Updated
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'

  /networks/{network_id}/prometheus/alert_receiver:
    post:
      summary: Create new alert receiver
      tags:
        - Metrics
      parameters:
        - $ref: './swagger-common.yml#/parameters/network_id'
        - in: body
          name: receiver_config
          description: Alert receiver that is to be added
          required: true
          schema:
            $ref: '#/definitions/alert_receiver_config'
      responses:
        '201':
          description: Created
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'
    get:
      summary: Retrive alert receivers
      tags:
        - Metrics
      parameters:
        - $ref: './swagger-common.yml#/parameters/network_id'
      responses:
        '200':
          description: List of alert receivers
          schema:
            type: array
            items:
              $ref: '#/definitions/alert_receiver_config'
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'
    delete:
      summary: Delete alert receiver
      tags:
        - Metrics
      parameters:
        - $ref: './swagger-common.yml#/parameters/network_id'
        - in: query
          name: receiver
          description: Receiver name to be deleted
          required: true
          type: string
      responses:
        '200':
          description: Deleted
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'

  /networks/{network_id}/prometheus/alert_receiver/{receiver}:
    put:
      summary: Update existing alert receiver
      tags:
        - Metrics
      parameters:
        - $ref: './swagger-common.yml#/parameters/network_id'
        - in: path
          name: receiver
          description: Name of receiver to be updated
          required: true
          type: string
        - in: body
          name: receiver_config
          description: Updated alert receiver
          required: true
          schema:
            $ref: '#/definitions/alert_receiver_config'
      responses:
        '200':
          description: Updated
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'

  /networks/{network_id}/prometheus/alert_receiver/route:
    get:
      summary: Retrieve alert routing tree
      tags:
        - Metrics
      parameters:
        - $ref: './swagger-common.yml#/parameters/network_id'
      responses:
        '200':
          description: Alerting tree
          schema:
            $ref: '#/definitions/alert_routing_tree'
    post:
      summary: Modify alert routing tree
      tags:
        - Metrics
      parameters:
        - $ref: './swagger-common.yml#/parameters/network_id'
        - in: body
          name: route
          description: Alert routing tree to be used
          required: true
          schema:
            $ref: '#/definitions/alert_routing_tree'
      responses:
        '200':
          description: OK
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'

definitions:
  promql_return_object:
    type: object
    required:
    - status
    - data
    properties:
      status:
        type: string
        example: "success"
      data:
        $ref: '#/definitions/promql_data'
  promql_data:
    type: object
    required:
    - resultType
    - result
    properties:
      resultType:
        type: string
        example: "vector"
      result:
        $ref: '#/definitions/promql_result'
  promql_result:
    type: array
    items:
      $ref: '#/definitions/promql_metric_value'
    minItems: 2
    maxItems: 2
  promql_metric_value:
    description: If resultType is 'vector' value is in the result, if 'matrix', values is in the result
    type: object
    required:
    - metric
    properties:
      metric:
        $ref: '#/definitions/promql_metric'
      value:
        $ref: '#/definitions/metric_datapoint'
      values:
        $ref: '#/definitions/metric_datapoints'
  promql_metric:
    type: object
    required:
    - __name__
    - instance
    properties:
      __name__:
        type: string
      gateway:
        type: string
      instance:
        type: string
      job:
        type: string
      host:
        type: string
    example:
      __name__: gateway_up_time
      gateway: "NFHDZAQU8Pyw2N91nbNdGjk5e.22ffea10-7fc4-4427-975a-b9e4ce8f6f4d"
      instance: "NFHDZAQU8Pyw2N91nbNdGjk5e"
      job: "sample_service"
      host: "magma_controller_a"

  metric_datapoints:
    type: array
    items:
      $ref: '#/definitions/metric_datapoint'
  metric_datapoint:
    type: array
    items:
      type: string
    minItems: 2
    maxItems: 2
    example: [1548439790.115,"1"]

  prom_alert_config:
    type: object
    required:
      - alert
      - expr
    properties:
      alert:
        type: string
      expr:
        type: string
      labels:
        $ref: '#/definitions/prom_alert_labels'
      for:
        type: string
      annotations:
        $ref: '#/definitions/prom_alert_labels'

  prom_alert_config_list:
    type: array
    items:
        $ref: '#/definitions/prom_alert_config'

  alert_bulk_upload_response:
    type: object
    required:
      - errors
      - statuses
    properties:
      errors:
        type: object
        additionalProperties:
          type: string
      statuses:
        type: object
        additionalProperties:
          type: string

  prom_alert_labels:
    type: object
    additionalProperties:
      type: string

  alert_receiver_config:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      slack_configs:
        type: array
        items:
          $ref: '#/definitions/slack_receiver'

  slack_receiver:
    type: object
    required:
      - api_url
    properties:
      api_url:
        type: string
      channel:
        type: string
      username:
        type: string
      color:
        type: string
      title:
        type: string
      pretext:
        type: string
      text:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/slack_field'
      short_fields:
        type: boolean
      footer:
        type: string
      fallback:
        type: string
      callback_id:
        type: string
      icon_emoji:
        type: string
      icon_url:
        type: string
      image_url:
        type: string
      thumb_url:
        type: string
      link_names:
        type: boolean
      actions:
        type: array
        items:
          $ref: '#/definitions/slack_action'

  slack_field:
    type: object
    required:
      - title
      - value
    properties:
      title:
        type: string
      value:
        type: string
      short:
        type: boolean

  slack_action:
    type: object
    required:
      - type
      - text
      - url
    properties:
      type:
        type: string
      text:
        type: string
      url:
        type: string
      style:
        type: string
      name:
        type: string
      value:
        type: string
      confirm:
        $ref: '#/definitions/slack_confirm_field'

  slack_confirm_field:
    type: object
    required:
      - text
      - title
      - ok_text
      - dismiss_text
    properties:
      text:
        type: string
      title:
        type: string
      ok_text:
        type: string
      dismiss_text:
        type: string

  prom_firing_alert:
    type: object
    required:
      - annotations
      - endsAt
      - fingerprint
      - receivers
      - startsAt
      - status
      - updatedAt
      - labels
    properties:
      annotations:
        $ref: '#/definitions/prom_alert_labels'
      endsAt:
        type: string
      fingerprint:
        type: string
      receivers:
        $ref: '#/definitions/gettable_alert'
      startsAt:
        type: string
      status:
        $ref: '#/definitions/prom_alert_status'
      updatedAt:
        type: string
      generatorURL:
        type: string
      labels:
        $ref: '#/definitions/prom_alert_labels'

  gettable_alert:
    type: object
    required:
      - name
    properties:
      name:
        type: string

  prom_alert_status:
    type: object
    required:
      - inhibitedBy
      - silencedBy
      - state
    properties:
      inhibitedBy:
        type: array
        items:
          type: string
      silencedBy:
        type: array
        items:
          type: string
      state:
        type: string

  alert_routing_tree:
    type: object
    required:
      - receiver
    properties:
      receiver:
        type: string
      group_by:
        type: array
        items:
          type: string
      match:
        type: object
        properties:
          label:
            type: string
          value:
            type: string
      match_re:
        type: object
        properties:
          label:
            type: string
          value:
            type: string
      continue:
        type: boolean
      routes:
        type: array
        items:
          $ref: '#/definitions/alert_routing_tree'
      group_wait:
        type: string
      group_interval:
        type: string
      repeat_interval:
        type: string
