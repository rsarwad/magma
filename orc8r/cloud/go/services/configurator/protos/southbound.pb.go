// Code generated by protoc-gen-go. DO NOT EDIT.
// source: southbound.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	storage "magma/orc8r/cloud/go/services/configurator/storage"
	protos "magma/orc8r/lib/go/protos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetMconfigRequest struct {
	HardwareID           string   `protobuf:"bytes,1,opt,name=hardwareID,proto3" json:"hardwareID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMconfigRequest) Reset()         { *m = GetMconfigRequest{} }
func (m *GetMconfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetMconfigRequest) ProtoMessage()    {}
func (*GetMconfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_480661e00faacec1, []int{0}
}

func (m *GetMconfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMconfigRequest.Unmarshal(m, b)
}
func (m *GetMconfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMconfigRequest.Marshal(b, m, deterministic)
}
func (m *GetMconfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMconfigRequest.Merge(m, src)
}
func (m *GetMconfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetMconfigRequest.Size(m)
}
func (m *GetMconfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMconfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMconfigRequest proto.InternalMessageInfo

func (m *GetMconfigRequest) GetHardwareID() string {
	if m != nil {
		return m.HardwareID
	}
	return ""
}

type GetMconfigResponse struct {
	Configs              *protos.GatewayConfigs `protobuf:"bytes,1,opt,name=configs,proto3" json:"configs,omitempty"`
	LogicalID            string                 `protobuf:"bytes,2,opt,name=logicalID,proto3" json:"logicalID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetMconfigResponse) Reset()         { *m = GetMconfigResponse{} }
func (m *GetMconfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetMconfigResponse) ProtoMessage()    {}
func (*GetMconfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_480661e00faacec1, []int{1}
}

func (m *GetMconfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMconfigResponse.Unmarshal(m, b)
}
func (m *GetMconfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMconfigResponse.Marshal(b, m, deterministic)
}
func (m *GetMconfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMconfigResponse.Merge(m, src)
}
func (m *GetMconfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetMconfigResponse.Size(m)
}
func (m *GetMconfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMconfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMconfigResponse proto.InternalMessageInfo

func (m *GetMconfigResponse) GetConfigs() *protos.GatewayConfigs {
	if m != nil {
		return m.Configs
	}
	return nil
}

func (m *GetMconfigResponse) GetLogicalID() string {
	if m != nil {
		return m.LogicalID
	}
	return ""
}

type BuildMconfigRequest struct {
	NetworkId            string               `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	GatewayId            string               `protobuf:"bytes,2,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	EntityGraph          *storage.EntityGraph `protobuf:"bytes,3,opt,name=entity_graph,json=entityGraph,proto3" json:"entity_graph,omitempty"`
	Network              *storage.Network     `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BuildMconfigRequest) Reset()         { *m = BuildMconfigRequest{} }
func (m *BuildMconfigRequest) String() string { return proto.CompactTextString(m) }
func (*BuildMconfigRequest) ProtoMessage()    {}
func (*BuildMconfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_480661e00faacec1, []int{2}
}

func (m *BuildMconfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildMconfigRequest.Unmarshal(m, b)
}
func (m *BuildMconfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildMconfigRequest.Marshal(b, m, deterministic)
}
func (m *BuildMconfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildMconfigRequest.Merge(m, src)
}
func (m *BuildMconfigRequest) XXX_Size() int {
	return xxx_messageInfo_BuildMconfigRequest.Size(m)
}
func (m *BuildMconfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildMconfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildMconfigRequest proto.InternalMessageInfo

func (m *BuildMconfigRequest) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func (m *BuildMconfigRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *BuildMconfigRequest) GetEntityGraph() *storage.EntityGraph {
	if m != nil {
		return m.EntityGraph
	}
	return nil
}

func (m *BuildMconfigRequest) GetNetwork() *storage.Network {
	if m != nil {
		return m.Network
	}
	return nil
}

type BuildMconfigResponse struct {
	ConfigsByKey         map[string]*any.Any `protobuf:"bytes,1,rep,name=configs_by_key,json=configsByKey,proto3" json:"configs_by_key,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BuildMconfigResponse) Reset()         { *m = BuildMconfigResponse{} }
func (m *BuildMconfigResponse) String() string { return proto.CompactTextString(m) }
func (*BuildMconfigResponse) ProtoMessage()    {}
func (*BuildMconfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_480661e00faacec1, []int{3}
}

func (m *BuildMconfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildMconfigResponse.Unmarshal(m, b)
}
func (m *BuildMconfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildMconfigResponse.Marshal(b, m, deterministic)
}
func (m *BuildMconfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildMconfigResponse.Merge(m, src)
}
func (m *BuildMconfigResponse) XXX_Size() int {
	return xxx_messageInfo_BuildMconfigResponse.Size(m)
}
func (m *BuildMconfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildMconfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuildMconfigResponse proto.InternalMessageInfo

func (m *BuildMconfigResponse) GetConfigsByKey() map[string]*any.Any {
	if m != nil {
		return m.ConfigsByKey
	}
	return nil
}

func init() {
	proto.RegisterType((*GetMconfigRequest)(nil), "magma.orc8r.configurator.GetMconfigRequest")
	proto.RegisterType((*GetMconfigResponse)(nil), "magma.orc8r.configurator.GetMconfigResponse")
	proto.RegisterType((*BuildMconfigRequest)(nil), "magma.orc8r.configurator.BuildMconfigRequest")
	proto.RegisterType((*BuildMconfigResponse)(nil), "magma.orc8r.configurator.BuildMconfigResponse")
	proto.RegisterMapType((map[string]*any.Any)(nil), "magma.orc8r.configurator.BuildMconfigResponse.ConfigsByKeyEntry")
}

func init() { proto.RegisterFile("southbound.proto", fileDescriptor_480661e00faacec1) }

var fileDescriptor_480661e00faacec1 = []byte{
	// 520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x6d, 0x56, 0xc6, 0xe8, 0xed, 0x34, 0xad, 0x66, 0x42, 0xa1, 0x7c, 0x55, 0x79, 0x1a, 0x1f,
	0x73, 0xa4, 0x4c, 0x48, 0x13, 0x0f, 0x68, 0xb4, 0x9b, 0xaa, 0x08, 0x81, 0x50, 0x10, 0x3c, 0xf0,
	0x52, 0xb9, 0x89, 0x9b, 0x46, 0x4b, 0xec, 0xce, 0x71, 0x56, 0x85, 0xbf, 0xc8, 0x33, 0x7f, 0x82,
	0x5f, 0x81, 0x62, 0x3b, 0x34, 0x63, 0x2b, 0x6c, 0x4f, 0x76, 0x8f, 0xcf, 0xb9, 0xf7, 0xfa, 0xf8,
	0x34, 0xb0, 0x9b, 0xf3, 0x42, 0xce, 0xa7, 0xbc, 0x60, 0x11, 0x5e, 0x08, 0x2e, 0x39, 0xb2, 0x33,
	0x12, 0x67, 0x04, 0x73, 0x11, 0x1e, 0x09, 0x1c, 0x72, 0x36, 0x4b, 0xe2, 0x42, 0x10, 0xc9, 0x45,
	0xff, 0x61, 0xcc, 0x79, 0x9c, 0x52, 0x57, 0xf1, 0xa6, 0xc5, 0xcc, 0x25, 0xac, 0xd4, 0xa2, 0xfe,
	0x40, 0x89, 0x5c, 0x25, 0xd2, 0xe7, 0xb9, 0x9b, 0x69, 0xb1, 0x61, 0x3c, 0xbb, 0x86, 0x11, 0xf2,
	0x2c, 0xe3, 0xcc, 0x10, 0x8e, 0x9b, 0x84, 0x30, 0xe5, 0x45, 0xe4, 0xc6, 0xdc, 0xcd, 0xa9, 0xb8,
	0x48, 0x42, 0x5a, 0x71, 0x57, 0x93, 0xb8, 0xb9, 0xe4, 0x82, 0xc4, 0xb4, 0x5e, 0x75, 0x05, 0xe7,
	0x10, 0x7a, 0x63, 0x2a, 0x3f, 0x68, 0x66, 0x40, 0xcf, 0x0b, 0x9a, 0x4b, 0xf4, 0x14, 0x60, 0x4e,
	0x44, 0xb4, 0x24, 0x82, 0xfa, 0x27, 0xb6, 0x35, 0xb0, 0xf6, 0x3b, 0x41, 0x03, 0x71, 0x12, 0x40,
	0x4d, 0x51, 0xbe, 0xe0, 0x2c, 0xa7, 0xe8, 0x35, 0x6c, 0x69, 0x24, 0x57, 0x92, 0xae, 0xf7, 0x08,
	0x37, 0x6d, 0x19, 0x13, 0x49, 0x97, 0xa4, 0x1c, 0x69, 0x4a, 0x50, 0x73, 0xd1, 0x63, 0xe8, 0xa4,
	0x3c, 0x4e, 0x42, 0x92, 0xfa, 0x27, 0xf6, 0x86, 0xea, 0xb5, 0x02, 0x9c, 0x5f, 0x16, 0xdc, 0x1f,
	0x16, 0x49, 0x1a, 0xfd, 0x35, 0xe2, 0x13, 0x00, 0x46, 0xe5, 0x92, 0x8b, 0xb3, 0x49, 0x12, 0x99,
	0x11, 0x3b, 0x06, 0xf1, 0xa3, 0xea, 0x38, 0xd6, 0xfd, 0xaa, 0x63, 0x53, 0xd5, 0x20, 0x7e, 0x84,
	0x3e, 0xc1, 0x36, 0x65, 0x32, 0x91, 0xe5, 0x24, 0x16, 0x64, 0x31, 0xb7, 0xdb, 0x6a, 0xde, 0x03,
	0xbc, 0xee, 0x19, 0x71, 0x6d, 0xda, 0xa9, 0x52, 0x8d, 0x2b, 0x51, 0xd0, 0xa5, 0xab, 0x1f, 0x68,
	0x04, 0x5b, 0xa6, 0xbb, 0x7d, 0x47, 0x15, 0x7b, 0xfe, 0xff, 0x62, 0x1f, 0xb5, 0x20, 0xa8, 0x95,
	0xce, 0x4f, 0x0b, 0xf6, 0x2e, 0x5f, 0xd6, 0x58, 0x3b, 0x83, 0x1d, 0x63, 0xd7, 0x64, 0x5a, 0x4e,
	0xce, 0x68, 0x69, 0x5b, 0x83, 0xf6, 0x7e, 0xd7, 0x3b, 0x5e, 0xdf, 0xe4, 0xba, 0x3a, 0xd8, 0x98,
	0x3f, 0x2c, 0xdf, 0xd3, 0xf2, 0x94, 0x49, 0x51, 0x06, 0xdb, 0x61, 0x03, 0xea, 0x7f, 0x81, 0xde,
	0x15, 0x0a, 0xda, 0x85, 0xb6, 0xee, 0x58, 0x99, 0x58, 0x6d, 0xd1, 0x0b, 0xd8, 0xbc, 0x20, 0x69,
	0x41, 0x95, 0xb1, 0x5d, 0x6f, 0x0f, 0xeb, 0x90, 0xe3, 0x3a, 0xe4, 0xf8, 0x1d, 0x2b, 0x03, 0x4d,
	0x79, 0xb3, 0x71, 0x64, 0x79, 0x3f, 0x2c, 0x78, 0xf0, 0xf9, 0xcf, 0x7f, 0x66, 0xd4, 0x18, 0x13,
	0xbd, 0x05, 0x58, 0x45, 0x09, 0xf5, 0x2e, 0xdd, 0xe7, 0x2b, 0x4f, 0xa2, 0xfe, 0xbf, 0x42, 0xe4,
	0xb4, 0xd0, 0x79, 0x33, 0x8a, 0x3e, 0x93, 0x54, 0x30, 0x92, 0xa2, 0x97, 0xeb, 0x7d, 0xb9, 0x92,
	0xf6, 0xfe, 0xab, 0x9b, 0x91, 0xb5, 0x85, 0x4e, 0xcb, 0xfb, 0x0e, 0x3b, 0x06, 0x54, 0x1e, 0x53,
	0x81, 0xe6, 0xb0, 0xa9, 0xb6, 0xe8, 0xe0, 0xa6, 0xef, 0xa1, 0x3b, 0xe3, 0xdb, 0x3d, 0x9f, 0xd3,
	0x1a, 0xde, 0xfb, 0x76, 0x57, 0x7f, 0x07, 0xa6, 0x7a, 0x3d, 0xfc, 0x1d, 0x00, 0x00, 0xff, 0xff,
	0xbb, 0x13, 0x06, 0xab, 0x8d, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SouthboundConfiguratorClient is the client API for SouthboundConfigurator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SouthboundConfiguratorClient interface {
	GetMconfig(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*protos.GatewayConfigs, error)
	// GetMconfigInternal exists to support the existing streamer mconfig
	// policy. This should be removed when we migrate gateway mconfig updates
	// from streamer to this southbound configurator servicer.
	GetMconfigInternal(ctx context.Context, in *GetMconfigRequest, opts ...grpc.CallOption) (*GetMconfigResponse, error)
}

type southboundConfiguratorClient struct {
	cc grpc.ClientConnInterface
}

func NewSouthboundConfiguratorClient(cc grpc.ClientConnInterface) SouthboundConfiguratorClient {
	return &southboundConfiguratorClient{cc}
}

func (c *southboundConfiguratorClient) GetMconfig(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*protos.GatewayConfigs, error) {
	out := new(protos.GatewayConfigs)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.SouthboundConfigurator/GetMconfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *southboundConfiguratorClient) GetMconfigInternal(ctx context.Context, in *GetMconfigRequest, opts ...grpc.CallOption) (*GetMconfigResponse, error) {
	out := new(GetMconfigResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.SouthboundConfigurator/GetMconfigInternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SouthboundConfiguratorServer is the server API for SouthboundConfigurator service.
type SouthboundConfiguratorServer interface {
	GetMconfig(context.Context, *protos.Void) (*protos.GatewayConfigs, error)
	// GetMconfigInternal exists to support the existing streamer mconfig
	// policy. This should be removed when we migrate gateway mconfig updates
	// from streamer to this southbound configurator servicer.
	GetMconfigInternal(context.Context, *GetMconfigRequest) (*GetMconfigResponse, error)
}

// UnimplementedSouthboundConfiguratorServer can be embedded to have forward compatible implementations.
type UnimplementedSouthboundConfiguratorServer struct {
}

func (*UnimplementedSouthboundConfiguratorServer) GetMconfig(ctx context.Context, req *protos.Void) (*protos.GatewayConfigs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMconfig not implemented")
}
func (*UnimplementedSouthboundConfiguratorServer) GetMconfigInternal(ctx context.Context, req *GetMconfigRequest) (*GetMconfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMconfigInternal not implemented")
}

func RegisterSouthboundConfiguratorServer(s *grpc.Server, srv SouthboundConfiguratorServer) {
	s.RegisterService(&_SouthboundConfigurator_serviceDesc, srv)
}

func _SouthboundConfigurator_GetMconfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SouthboundConfiguratorServer).GetMconfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.SouthboundConfigurator/GetMconfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SouthboundConfiguratorServer).GetMconfig(ctx, req.(*protos.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _SouthboundConfigurator_GetMconfigInternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMconfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SouthboundConfiguratorServer).GetMconfigInternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.SouthboundConfigurator/GetMconfigInternal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SouthboundConfiguratorServer).GetMconfigInternal(ctx, req.(*GetMconfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SouthboundConfigurator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.configurator.SouthboundConfigurator",
	HandlerType: (*SouthboundConfiguratorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMconfig",
			Handler:    _SouthboundConfigurator_GetMconfig_Handler,
		},
		{
			MethodName: "GetMconfigInternal",
			Handler:    _SouthboundConfigurator_GetMconfigInternal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "southbound.proto",
}

// MconfigBuilderClient is the client API for MconfigBuilder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MconfigBuilderClient interface {
	Build(ctx context.Context, in *BuildMconfigRequest, opts ...grpc.CallOption) (*BuildMconfigResponse, error)
}

type mconfigBuilderClient struct {
	cc grpc.ClientConnInterface
}

func NewMconfigBuilderClient(cc grpc.ClientConnInterface) MconfigBuilderClient {
	return &mconfigBuilderClient{cc}
}

func (c *mconfigBuilderClient) Build(ctx context.Context, in *BuildMconfigRequest, opts ...grpc.CallOption) (*BuildMconfigResponse, error) {
	out := new(BuildMconfigResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.MconfigBuilder/Build", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MconfigBuilderServer is the server API for MconfigBuilder service.
type MconfigBuilderServer interface {
	Build(context.Context, *BuildMconfigRequest) (*BuildMconfigResponse, error)
}

// UnimplementedMconfigBuilderServer can be embedded to have forward compatible implementations.
type UnimplementedMconfigBuilderServer struct {
}

func (*UnimplementedMconfigBuilderServer) Build(ctx context.Context, req *BuildMconfigRequest) (*BuildMconfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Build not implemented")
}

func RegisterMconfigBuilderServer(s *grpc.Server, srv MconfigBuilderServer) {
	s.RegisterService(&_MconfigBuilder_serviceDesc, srv)
}

func _MconfigBuilder_Build_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildMconfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MconfigBuilderServer).Build(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.MconfigBuilder/Build",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MconfigBuilderServer).Build(ctx, req.(*BuildMconfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MconfigBuilder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.configurator.MconfigBuilder",
	HandlerType: (*MconfigBuilderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Build",
			Handler:    _MconfigBuilder_Build_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "southbound.proto",
}
