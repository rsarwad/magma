// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cwf/protos/mconfig/mconfigs.proto

package mconfig // import "magma/cwf/cloud/go/protos/mconfig"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ------------------------------------------------------------------------------
// CWAG configs
// ------------------------------------------------------------------------------
type RadiusdConfig struct {
	// Port the metrics server is running on
	RadiusMetricsPort uint32 `protobuf:"varint,1,opt,name=radius_metrics_port,json=radiusMetricsPort,proto3" json:"radius_metrics_port,omitempty"`
	// The path to access the prometheus metrics on the server
	RadiusMetricsPath string `protobuf:"bytes,2,opt,name=radius_metrics_path,json=radiusMetricsPath,proto3" json:"radius_metrics_path,omitempty"`
	// Interval in seconds between fetching and updating metrics
	UpdateIntervalSecs uint32 `protobuf:"varint,3,opt,name=update_interval_secs,json=updateIntervalSecs,proto3" json:"update_interval_secs,omitempty"`
	// Hostname for prometheus metrics
	RadiusMetricsHost    string   `protobuf:"bytes,4,opt,name=radius_metrics_host,json=radiusMetricsHost,proto3" json:"radius_metrics_host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RadiusdConfig) Reset()         { *m = RadiusdConfig{} }
func (m *RadiusdConfig) String() string { return proto.CompactTextString(m) }
func (*RadiusdConfig) ProtoMessage()    {}
func (*RadiusdConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_f0b6ca98d237b0ef, []int{0}
}
func (m *RadiusdConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadiusdConfig.Unmarshal(m, b)
}
func (m *RadiusdConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadiusdConfig.Marshal(b, m, deterministic)
}
func (dst *RadiusdConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadiusdConfig.Merge(dst, src)
}
func (m *RadiusdConfig) XXX_Size() int {
	return xxx_messageInfo_RadiusdConfig.Size(m)
}
func (m *RadiusdConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RadiusdConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RadiusdConfig proto.InternalMessageInfo

func (m *RadiusdConfig) GetRadiusMetricsPort() uint32 {
	if m != nil {
		return m.RadiusMetricsPort
	}
	return 0
}

func (m *RadiusdConfig) GetRadiusMetricsPath() string {
	if m != nil {
		return m.RadiusMetricsPath
	}
	return ""
}

func (m *RadiusdConfig) GetUpdateIntervalSecs() uint32 {
	if m != nil {
		return m.UpdateIntervalSecs
	}
	return 0
}

func (m *RadiusdConfig) GetRadiusMetricsHost() string {
	if m != nil {
		return m.RadiusMetricsHost
	}
	return ""
}

func init() {
	proto.RegisterType((*RadiusdConfig)(nil), "magma.mconfig.RadiusdConfig")
}

func init() {
	proto.RegisterFile("cwf/protos/mconfig/mconfigs.proto", fileDescriptor_mconfigs_f0b6ca98d237b0ef)
}

var fileDescriptor_mconfigs_f0b6ca98d237b0ef = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xb1, 0x4a, 0xc6, 0x30,
	0x14, 0x85, 0x89, 0x8a, 0x60, 0xa0, 0x83, 0xd1, 0x21, 0x63, 0xab, 0x4b, 0xa7, 0x46, 0xf0, 0x0d,
	0x74, 0xd1, 0x41, 0x90, 0xba, 0xb9, 0x84, 0x98, 0xa4, 0x6d, 0xa0, 0xe9, 0x2d, 0xb9, 0xb7, 0xfa,
	0x9c, 0xbe, 0x91, 0x98, 0xf6, 0x5f, 0x4a, 0xa7, 0x90, 0xef, 0x3b, 0x70, 0xb8, 0x87, 0x57, 0xf6,
	0xa7, 0x53, 0x73, 0x02, 0x02, 0x54, 0xd1, 0xc2, 0xd4, 0x85, 0xfe, 0xf4, 0x62, 0x93, 0xb9, 0x28,
	0xa2, 0xe9, 0xa3, 0x69, 0x36, 0x7a, 0xf7, 0xcb, 0x78, 0xd1, 0x1a, 0x17, 0x16, 0x74, 0xcf, 0x99,
	0x88, 0x86, 0xdf, 0xa4, 0x0c, 0x74, 0xf4, 0x94, 0x82, 0x45, 0x3d, 0x43, 0x22, 0xc9, 0x4a, 0x56,
	0x17, 0xed, 0xf5, 0xaa, 0xde, 0x56, 0xf3, 0x0e, 0x89, 0x8e, 0xf2, 0x86, 0x06, 0x79, 0x56, 0xb2,
	0xfa, 0x6a, 0x9f, 0x37, 0x34, 0x88, 0x07, 0x7e, 0xbb, 0xcc, 0xce, 0x90, 0xd7, 0x61, 0x22, 0x9f,
	0xbe, 0xcd, 0xa8, 0xd1, 0x5b, 0x94, 0xe7, 0xb9, 0x40, 0xac, 0xee, 0x75, 0x53, 0x1f, 0xde, 0xe2,
	0x41, 0xc3, 0x00, 0x48, 0xf2, 0xe2, 0xa0, 0xe1, 0x05, 0x90, 0x9e, 0xee, 0x3f, 0xab, 0x7c, 0xa4,
	0xfa, 0x5f, 0xc3, 0x8e, 0xb0, 0x38, 0xd5, 0xc3, 0x6e, 0x96, 0xaf, 0xcb, 0xfc, 0x7f, 0xfc, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0x3f, 0x2b, 0xb0, 0x90, 0x33, 0x01, 0x00, 0x00,
}
