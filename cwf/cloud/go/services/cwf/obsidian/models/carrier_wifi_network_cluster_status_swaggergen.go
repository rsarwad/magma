// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CarrierWifiNetworkClusterStatus Status of a Carrier Wifi HA cluster
// swagger:model carrier_wifi_network_cluster_status
type CarrierWifiNetworkClusterStatus struct {

	// active gateway
	// Required: true
	ActiveGateway string `json:"active_gateway"`
}

// Validate validates this carrier wifi network cluster status
func (m *CarrierWifiNetworkClusterStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActiveGateway(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CarrierWifiNetworkClusterStatus) validateActiveGateway(formats strfmt.Registry) error {

	if err := validate.RequiredString("active_gateway", "body", string(m.ActiveGateway)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CarrierWifiNetworkClusterStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CarrierWifiNetworkClusterStatus) UnmarshalBinary(b []byte) error {
	var res CarrierWifiNetworkClusterStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
